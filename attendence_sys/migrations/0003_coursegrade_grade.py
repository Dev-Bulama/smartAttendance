# Generated by Django 5.2.6 on 2025-10-01 10:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('attendence_sys', '0002_course_session'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(choices=[('Fall', 'Fall Semester'), ('Spring', 'Spring Semester')], max_length=20)),
                ('academic_year', models.CharField(max_length=20)),
                ('final_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('grade_letter', models.CharField(choices=[('A+', 'A+ (90-100)'), ('A', 'A (85-89)'), ('B+', 'B+ (80-84)'), ('B', 'B (75-79)'), ('C+', 'C+ (70-74)'), ('C', 'C (65-69)'), ('D', 'D (60-64)'), ('F', 'F (0-59)')], max_length=2)),
                ('quiz_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('assignment_avg', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('midterm_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('final_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('project_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('date_calculated', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='final_grades', to='attendence_sys.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_grades', to='attendence_sys.student')),
            ],
            options={
                'ordering': ['-academic_year', '-semester'],
                'unique_together': {('student', 'course', 'semester', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_type', models.CharField(choices=[('Quiz', 'Quiz/Test'), ('Assignment', 'Assignment'), ('Midterm', 'Midterm Exam'), ('Final', 'Final Exam'), ('Project', 'Project')], max_length=50)),
                ('assessment_name', models.CharField(blank=True, help_text='e.g., Quiz 1, Assignment 2', max_length=200, null=True)),
                ('marks_obtained', models.DecimalField(decimal_places=2, max_digits=6)),
                ('max_marks', models.DecimalField(decimal_places=2, max_digits=6)),
                ('percentage', models.DecimalField(decimal_places=2, editable=False, max_digits=5)),
                ('grade_letter', models.CharField(choices=[('A+', 'A+ (90-100)'), ('A', 'A (85-89)'), ('B+', 'B+ (80-84)'), ('B', 'B (75-79)'), ('C+', 'C+ (70-74)'), ('C', 'C (65-69)'), ('D', 'D (60-64)'), ('F', 'F (0-59)')], editable=False, max_length=2)),
                ('semester', models.CharField(choices=[('Fall', 'Fall Semester'), ('Spring', 'Spring Semester')], max_length=20)),
                ('academic_year', models.CharField(help_text='e.g., 2024-2025', max_length=20)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('date_recorded', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='attendence_sys.course')),
                ('lecturer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grades_given', to='attendence_sys.faculty')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='attendence_sys.student')),
            ],
            options={
                'ordering': ['-date_recorded'],
                'unique_together': {('student', 'course', 'assessment_type', 'assessment_name', 'semester', 'academic_year')},
            },
        ),
    ]
